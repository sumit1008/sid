D1. The Endspeaker (Easy Version)
This is the easy version of this problem. The only difference is that you only need to output the minimum total cost of operations in this version. You must solve both versions to be able to hack.
You're given an array a of length n, and an array b of length m (bi>bi+1 for all 1≤i<m). Initially, the value of k is 1. Your aim is to make the array a empty by performing one of these two operations repeatedly:
  - Type 1 — If the value of k is less than m and the array a is not empty, you can increase the value of k by 1. This does not incur any cost.
  - Type 2 — You remove a non-empty prefix of array a, such that its sum does not exceed bk. This incurs a cost of m−k.
You need to minimize the total cost of the operations to make array a empty. If it's impossible to do this through any sequence of operations, output −1. Otherwise, output the minimum total cost of the operations.
Tags -binary search
Tags -dp
Tags -graphs
Tags -greedy
Tags -implementation
Tags -two pointers
Tags -*1700
