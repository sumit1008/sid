C2. Adjust The Presentation (Hard Version)
This is the hard version of the problem. In the two versions, the constraints on q and the time limit are different. In this version, 0≤q≤2⋅105. You can make hacks only if all the versions of the problem are solved.
A team consisting of n members, numbered from 1 to n, is set to present a slide show at a large meeting. The slide show contains m slides.
There is an array a of length n. Initially, the members are standing in a line in the order of a1,a2,…,an from front to back. The slide show will be presented in order from slide 1 to slide m. Each section will be presented by the member at the front of the line. After each slide is presented, you can move the member at the front of the line to any position in the lineup (without changing the order of the rest of the members). For example, suppose the line of members is [3,1,2,4]. After member 3 presents the current slide, you can change the line of members into either [3,1,2,4], [1,3,2,4], [1,2,3,4] or [1,2,4,3].
There is also an array b of length m. The slide show is considered good if it is possible to make member bi present slide i for all i from 1 to m under these constraints.
However, your annoying boss wants to make q updates to the array b. In the i-th update, he will choose a slide si and a member ti and set bsi:=ti. Note that these updates are persistent, that is changes made to the array b will apply when processing future updates.
For each of the q+1 states of array b, the initial state and after each of the q updates, determine if the slideshow is good.
Tags -constructive algorithms
Tags -data structures
Tags -greedy
Tags -implementation
Tags -sortings
Tags -*1900
