D. Recommendations
Suppose you are working in some audio streaming service. The service has n active users and 109 tracks users can listen to. Users can like tracks and, based on likes, the service should recommend them new tracks.
Tracks are numbered from 1 to 109. It turned out that tracks the i-th user likes form a segment [li,ri].
Let's say that the user j is a predictor for user i (jâ‰ i) if user j likes all tracks the i-th user likes (and, possibly, some other tracks too).
Also, let's say that a track is strongly recommended for user i if the track is not liked by the i-th user yet, but it is liked by every predictor for the i-th user.
Calculate the number of strongly recommended tracks for each user i. If a user doesn't have any predictors, then print 0 for that user.
Tags -data structures
Tags -implementation
Tags -sortings
Tags -two pointers
Tags -*1900
